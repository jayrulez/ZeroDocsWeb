.. _ReferencePointForceEffect:

.. rst-class:: searchtitle

PointForceEffect
================

.. rst-class:: searchdescription

A force effect who's direction and strength is based upon the distance from a central point. The direction of the force will always point to the center of the field, but the strength will vary depending on the min/max distance and strength values. Useful to make planetary force field like effects.

.. include:: Description/PointForceEffect.rst

.. cpp:class:: PointForceEffect

    Base Class: :cpp:type:`BasicPointEffect`

.. _ReferencePointForceEffectProperties:

Properties
----------

    .. rst-class:: collapsible

        .. cpp:member:: Cog PointForceEffect::Owner

            Get the Object this component is owned/composed. Not the parent of this composition.

    .. rst-class:: collapsible

        .. cpp:member:: Space PointForceEffect::Space

            The Space where the object is located.

    .. rst-class:: collapsible

        .. cpp:member:: Cog PointForceEffect::LevelSettings

            Get the object named'LevelSettings', a special object where we can put components for our level.

    .. rst-class:: collapsible

        .. cpp:member:: GameSession PointForceEffect::GameSession

            Get the GameSession that owns us and our space.

    .. rst-class:: collapsible

        .. cpp:member:: bool PointForceEffect::Active

            Enable/disable this effect.

    .. rst-class:: collapsible

        .. cpp:member:: bool PointForceEffect::WakeUpOnChange

            Whether the object associated with this is woken up when any property is changed.

    .. rst-class:: collapsible

        .. cpp:member:: EffectType::Enum PointForceEffect::EffectType

            What kind of effect this is.

    .. rst-class:: collapsible

        .. cpp:member:: real PointForceEffect::MinDistance

            The first distance at which attenuation will start. If an object is under the min distance, it will get the strength at min applied. If an object is in between min and max, then it will attenuate.

    .. rst-class:: collapsible

        .. cpp:member:: real PointForceEffect::MaxDistance

            The max distance that attenuation will happen at. If an object is between min and max distance, the value will be attenuated. If the object is further away, the effect strength will be determined by EndCondition.

    .. rst-class:: collapsible

        .. cpp:member:: real PointForceEffect::StrengthAtMin

            The strength that this effect applies at the min distance.

    .. rst-class:: collapsible

        .. cpp:member:: real PointForceEffect::StrengthAtMax

            The strength that this effect applies at the max distance.

    .. rst-class:: collapsible

        .. cpp:member:: Vec3 PointForceEffect::LocalPositionOffset

            The offset from the transform position(in local space) that the point effect will be applied at.

    .. rst-class:: collapsible

        .. cpp:member:: PointInterpolationStates::Enum PointForceEffect::InterpolationType

            The type of interpolation used(ie. Linear, Quadratic) for the effect.

    .. rst-class:: collapsible

        .. cpp:member:: PointEndCondition::Enum PointForceEffect::EndCondition

            How the interpolation should be handled at the max distance. ClampToMax will clamp to strength at max. NoEffect will ignore the effect. ContinueFalloff will continue the interpolation(this may go negative).

.. _ReferencePointForceEffectMethods:

Methods
-------

    .. rst-class:: collapsible

        .. cpp:function:: void PointForceEffect::DebugDraw()

            Base debug draw for a component. Special for the each type of component.

    .. rst-class:: collapsible

        .. cpp:function:: void PointForceEffect::Toggle()

            Toggles whether or not this effect is active.

.. include:: Remarks/PointForceEffect.rst