.. _ReferenceWeldJoint:

.. rst-class:: searchtitle

WeldJoint
=========

.. rst-class:: searchdescription

A weld joint is used to lock to position and orientation of two objects together. This can be useful to lock two objects together. However, welds should generally not be used as they are computationally more expensive and less rigid than using composites. The only uses for welds are for quick connections or connections that are desired to not be fully rigid. Also, while it can be done with composites too, welds can be used to model the breaking apart of two objects. Limits, motors and springs should most likely not be used on this. Add on definitions: Limit: A limit will provide a min/max translation on the x,y and z axes. Motor: A motor will attempt to drive the rotation on the x,y and z axes. Spring: A spring will make the x,y and z axis springy.

.. include:: Description/WeldJoint.rst

.. cpp:class:: WeldJoint

    Base Class: :cpp:type:`Joint`

.. _ReferenceWeldJointProperties:

Properties
----------

    .. rst-class:: collapsible

        .. cpp:member:: Cog WeldJoint::Owner

            Get the Object this component is owned/composed. Not the parent of this composition.

    .. rst-class:: collapsible

        .. cpp:member:: Space WeldJoint::Space

            The Space where the object is located.

    .. rst-class:: collapsible

        .. cpp:member:: Cog WeldJoint::LevelSettings

            Get the object named'LevelSettings', a special object where we can put components for our level.

    .. rst-class:: collapsible

        .. cpp:member:: GameSession WeldJoint::GameSession

            Get the GameSession that owns us and our space.

    .. rst-class:: collapsible

        .. cpp:member:: bool WeldJoint::Active

            Determines if this joint is currently active. Used for runtime enabling/disabling of joints.

    .. rst-class:: collapsible

        .. cpp:member:: bool WeldJoint::SendsEvents

            Determines if this joint will send any events. Used for a small efficiency boost and for reducing the number of events.

    .. rst-class:: collapsible

        .. cpp:member:: bool WeldJoint::AutoSnaps

            Determines if this joint will automatically delete itself if it reaches the max force value. This will still send an event if it snaps.

    .. rst-class:: collapsible

        .. cpp:member:: bool WeldJoint::CollideConnected

            Determines if the two objects connected by this joint can collide. If any joint between this pair does not collide, then the pair does not collide. All joints have to be set to true in order to have the objects collide.

    .. rst-class:: collapsible

        .. cpp:member:: real WeldJoint::MaxForce

            The maximum force that this joint can apply to correct itself.

    .. rst-class:: collapsible

        .. cpp:member:: Vec3 WeldJoint::LocalPointA

            The local point of the anchor on object A.

    .. rst-class:: collapsible

        .. cpp:member:: Vec3 WeldJoint::LocalPointB

            The local point of the anchor on object B.

    .. rst-class:: collapsible

        .. cpp:member:: Vec3 WeldJoint::WorldPointA

            The position of the anchor on object A in world space.

    .. rst-class:: collapsible

        .. cpp:member:: Vec3 WeldJoint::WorldPointB

            The position of the anchor on object B in world space.

    .. rst-class:: collapsible

        .. cpp:member:: Quat WeldJoint::LocalAngleA

            The rotation on object A that is being aligned to.

    .. rst-class:: collapsible

        .. cpp:member:: Quat WeldJoint::LocalAngleB

            The rotation on object B that is being aligned to.

.. _ReferenceWeldJointMethods:

Methods
-------

    .. rst-class:: collapsible

        .. cpp:function:: void WeldJoint::DebugDraw()

            Draws the debug info associated with this joint.

    .. rst-class:: collapsible

        .. cpp:function:: Cog WeldJoint::GetOtherObject(Cog cog)

            If the passed in object is ObjectA, returns ObjectB. Prevents the user from having to write the if case all the time.

    .. rst-class:: collapsible

        .. cpp:function:: Cog WeldJoint::GetCog(uint index)

            Returns the cog associated with an index. Index of 0 is ObjectA, index 1 is ObjectB. Used to write more streamline functions where you index into the objects in a loop.

    .. rst-class:: collapsible

        .. cpp:function:: void WeldJoint::SetWorldPointsVec3

            Sets the position of the anchor on object A and B given a position in world space

.. include:: Remarks/WeldJoint.rst