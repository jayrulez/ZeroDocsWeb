.. _ReferenceTimeSpace:

.. rst-class:: searchtitle

TimeSpace
=========

.. rst-class:: searchdescription

Time space component controls time for a Space.

.. include:: Description/TimeSpace.rst

.. cpp:class:: TimeSpace

    Base Class: :cpp:type:`Component`

.. _ReferenceTimeSpaceProperties:

Properties
----------

    .. rst-class:: collapsible

        .. cpp:member:: Cog TimeSpace::Owner

            Get the Object this component is owned/composed. Not the parent of this composition.

    .. rst-class:: collapsible

        .. cpp:member:: Space TimeSpace::Space

            The Space where the object is located.

    .. rst-class:: collapsible

        .. cpp:member:: Cog TimeSpace::LevelSettings

            Get the object named'LevelSettings', a special object where we can put components for our level.

    .. rst-class:: collapsible

        .. cpp:member:: GameSession TimeSpace::GameSession

            Get the GameSession that owns us and our space.

    .. rst-class:: collapsible

        .. cpp:member:: bool TimeSpace::GloballyPaused

            

    .. rst-class:: collapsible

        .. cpp:member:: Real TimeSpace::DtOrZero

            

    .. rst-class:: collapsible

        .. cpp:member:: uint TimeSpace::TimeMode

            When set to fixed framerate the Dt/frame time will never change(it will send whatever the project frame-rate-limiter is set to) This means it is important to run with a frame-rate limiter of some kind otherwise the game will appear to run much faster/slower Note: For determinism, you should always run in FixedFrametime mode When set to actual framerate we will send out the real time that the engine is encountering(clamped by MinDt/ MaxDt)

    .. rst-class:: collapsible

        .. cpp:member:: Real TimeSpace::MinDt

            The minimum amount of time we send when running in'ActualFrametime' mode Ideally this is set to a very small non-zero value to prevent any division by zero errors.

    .. rst-class:: collapsible

        .. cpp:member:: Real TimeSpace::MaxDt

            The maximum amount of time we send when running in'ActualFrametime' mode If this value is set too high and the user does anything to pause their system or the game(example grabbing the window) then a large frame time will be sent out and physics objects will jump very far(causing tunnelling and random bounces)

    .. rst-class:: collapsible

        .. cpp:member:: Real TimeSpace::TimeScale

            Scale the speed of time for interesting effects like bullet time or fast pased gameplay.

    .. rst-class:: collapsible

        .. cpp:member:: bool TimeSpace::Paused

            If the time space is paused then we cease sending out logic update events When paused, the Dt will remain at whatever it was(it will NOT be set to 0)

    .. rst-class:: collapsible

        .. cpp:member:: Real TimeSpace::Dt

            

    .. rst-class:: collapsible

        .. cpp:member:: Real TimeSpace::RealDt

            

    .. rst-class:: collapsible

        .. cpp:member:: Real TimeSpace::TimePassed

            

    .. rst-class:: collapsible

        .. cpp:member:: Real TimeSpace::RealTimePassed

            

    .. rst-class:: collapsible

        .. cpp:member:: int TimeSpace::Frame

            The current frame we are on(starts at 0 and counts up for every frame that is run) This value counts up regardless of if the space is paused.

    .. rst-class:: collapsible

        .. cpp:member:: uint TimeSpace::StepCount

            Causes the engine to update multiple times before rendering a frame.

.. _ReferenceTimeSpaceMethods:

Methods
-------

    .. rst-class:: collapsible

        .. cpp:function:: void TimeSpace::DebugDraw()

            Base debug draw for a component. Special for the each type of component.

    .. rst-class:: collapsible

        .. cpp:function:: void TimeSpace::TogglePause()

            Toggles the state of paused.

    .. rst-class:: collapsible

        .. cpp:function:: void TimeSpace::Step()

            Allows the engine to be advance one frame forward. Useful for debugging one frame at a time.

.. include:: Remarks/TimeSpace.rst