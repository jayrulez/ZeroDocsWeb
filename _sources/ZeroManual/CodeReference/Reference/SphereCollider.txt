.. _ReferenceSphereCollider:

.. rst-class:: searchtitle

SphereCollider
==============

.. rst-class:: searchdescription

SphereCollider is a basic collision primitive of a sphere.

.. include:: Description/SphereCollider.rst

.. cpp:class:: SphereCollider

    Base Class: :cpp:type:`Collider`

.. _ReferenceSphereColliderProperties:

Properties
----------

    .. rst-class:: collapsible

        .. cpp:member:: Cog SphereCollider::Owner

            Get the Object this component is owned/composed. Not the parent of this composition.

    .. rst-class:: collapsible

        .. cpp:member:: Space SphereCollider::Space

            The Space where the object is located.

    .. rst-class:: collapsible

        .. cpp:member:: Cog SphereCollider::LevelSettings

            Get the object named'LevelSettings', a special object where we can put components for our level.

    .. rst-class:: collapsible

        .. cpp:member:: GameSession SphereCollider::GameSession

            Get the GameSession that owns us and our space.

    .. rst-class:: collapsible

        .. cpp:member:: PhysicsMaterial SphereCollider::Material

            The material used to determine the density, restitution and friction of this collider.

    .. rst-class:: collapsible

        .. cpp:member:: CollisionGroup SphereCollider::CollisionGroup

            The collision group is a tag used to alter collision behavior based upon the CollisionTable on this object's space.

    .. rst-class:: collapsible

        .. cpp:member:: bool SphereCollider::Ghost

            Ghosted colliders do not resolve collision. They do still detect collisions and send events. Ghosted colliders are typically used for trigger regions.

    .. rst-class:: collapsible

        .. cpp:member:: bool SphereCollider::SendsEvents

            Determines if this object will send collision events. Used mainly for increasing performance by not sending unnecessary collision events.

    .. rst-class:: collapsible

        .. cpp:member:: Vec3 SphereCollider::Offset

            Moves the physics defined center of the object away from the transform's translation. Used to move physics to match a model.

    .. rst-class:: collapsible

        .. cpp:member:: RigidBody SphereCollider::ActiveBody

            The rigid body that owns this collider. This is the body that forces/impulses/etc... should be applied to.

    .. rst-class:: collapsible

        .. cpp:member:: uint SphereCollider::ContactCount

            Returns the number of contacts on this collider.

    .. rst-class:: collapsible

        .. cpp:member:: ContactRange SphereCollider::Contacts

            Range of all contacts on this collider.

    .. rst-class:: collapsible

        .. cpp:member:: uint SphereCollider::JointCount

            Returns the number of joints attached to this collider.

    .. rst-class:: collapsible

        .. cpp:member:: JointRange SphereCollider::Joints

            Range of all joints on this collider.

    .. rst-class:: collapsible

        .. cpp:member:: real SphereCollider::Radius

            The radius of the sphere in local space(before transform is applied).

.. _ReferenceSphereColliderMethods:

Methods
-------

    .. rst-class:: collapsible

        .. cpp:function:: void SphereCollider::DebugDraw()

            Base debug draw for a component. Special for the each type of component.

    .. rst-class:: collapsible

        .. cpp:function:: real SphereCollider::ComputeVolume()

            Compute the world-space volume of this collider.

    .. rst-class:: collapsible

        .. cpp:function:: Vec3 SphereCollider::GetPointVelocity(Vec3 worldPoint)

            Returns the point velocity of a world-space point with respect to the current rigid body's linear and angular velocity. If there is no rigid body this returns zero.

.. include:: Remarks/SphereCollider.rst